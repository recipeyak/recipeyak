name: UI

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@c449d86cf33a2a6c7a4193264cc2578e2c3266d4 # pin@v4
        with:
          paths: '["frontend/**", ".github/workflows/**"]'
  test:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: "frontend/package.json"
          cache-dependency-path: "frontend/package-lock.json"
          cache: "npm"
      - name: Install dependencies
        working-directory: "frontend"
        run: npm ci
      - name: Run tests
        working-directory: "frontend"
        run: ./s/test --no-watch --reporter junit --outputFile ~/test-results/frontend_tests.xml
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ~/test-results
  format:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: "frontend/package.json"
          cache-dependency-path: "frontend/package-lock.json"
          cache: "npm"
      - name: Install dependencies
        working-directory: "frontend"
        run: npm ci
      - name: Check formatting
        working-directory: "frontend"
        run: ./s/fmt
  eslint:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: "frontend/package.json"
          cache-dependency-path: "frontend/package-lock.json"
          cache: "npm"
      - name: Install dependencies
        working-directory: "frontend"
        run: npm ci
      - name: Run Eslint
        working-directory: "frontend"
        run: ./s/eslint
  typecheck:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: "frontend/package.json"
          cache-dependency-path: "frontend/package-lock.json"
          cache: "npm"
      - name: Install dependencies
        working-directory: "frontend"
        run: npm ci
      - name: Check types
        working-directory: "frontend"
        run: ./s/typecheck
  build:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: "frontend/package.json"
          cache-dependency-path: "frontend/package-lock.json"
          cache: "npm"
      - name: Install dependencies
        working-directory: "frontend"
        run: npm ci
      - name: Build bundle
        working-directory: "frontend"
        run: ./s/build
